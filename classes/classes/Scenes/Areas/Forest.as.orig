/**
 * Created by aimozg on 06.01.14.
 */
package classes.Scenes.Areas
{
	import classes.*;
	import classes.GlobalFlags.kFLAGS;
	import classes.GlobalFlags.kGAMECLASS;
import classes.Scenes.API.Encounter;
import classes.Scenes.API.Encounters;
import classes.Scenes.API.FnHelpers;
	import classes.Scenes.API.IExplorable;
	import classes.Scenes.Areas.Forest.*;
	
	use namespace kGAMECLASS;

	public class Forest extends BaseContent implements IExplorable
	{
		public var akbalScene:AkbalScene = new AkbalScene();
		public var akbalHermScene:AkbalHermScene = new AkbalHermScene();
		public var beeGirlScene:BeeGirlScene = new BeeGirlScene();
		public var corruptedGlade:CorruptedGlade = new CorruptedGlade();
		public var essrayle:Essrayle = new Essrayle();
		public var faerie:Faerie = new Faerie();
		public var kitsuneScene:KitsuneScene = new KitsuneScene();
		public var tamaniScene:TamaniScene = new TamaniScene();
		public var tentacleBeastScene:TentacleBeastScene = new TentacleBeastScene();
		public var erlkingScene:ErlKingScene = new ErlKingScene();
		// public var dullahanScene:DullahanScene = new DullahanScene(); // [INTERMOD:8chan]

		public function Forest() { }
<<<<<<< HEAD
		
		public function exploreDeepwoods():void
		{
			clearOutput();
			//Increment deepwoods exploration counter.
			player.addStatusValue(StatusEffects.ExploredDeepwoods, 1, 1);
			
			var choice:Array = [];
			var select:int;
			
			//Build choice list!
			if (flags[kFLAGS.FAERIE_ENCOUNTER_DISABLED] <= 0) choice[choice.length] = 0; //Faerie
			if (player.level >= 2) choice[choice.length] = 1; //Tentacle Beast
			if (flags[kFLAGS.CORRUPTED_GLADES_DESTROYED] < 100 && rand(100) >= Math.round(flags[kFLAGS.CORRUPTED_GLADES_DESTROYED] * 0.5)) choice[choice.length] = 2; //Corrupted Glade
			choice[choice.length] = 3; //Akbal
			choice[choice.length] = 4; //Kitsunes
			if (flags[kFLAGS.TAMANI_TIME_OUT] == 0 && player.gender > 0 && flags[kFLAGS.TAMANI_BAD_ENDED] == 0 && (player.totalCocks() > 0 || player.hasKeyItem("Deluxe Dildo") < 0)) choice[choice.length] = 5; //Tamani
			if (flags[kFLAGS.CAMP_CABIN_PROGRESS] >= 4 && flags[kFLAGS.CAMP_CABIN_WOOD_RESOURCES] < 100 && rand(2) == 0) choice[choice.length] = 6; //Gather woods
			
			//Every tenth exploration finds a pumpkin if eligible!
			if (player.statusEffectv1(StatusEffects.ExploredDeepwoods) % 10 == 0 || isHalloween()) {
				//If Fera isn't free yet...
				if (player.findPerk(PerkLib.FerasBoonBreedingBitch) < 0 && player.findPerk(PerkLib.FerasBoonAlpha) < 0) {
					if (date.fullYear > flags[kFLAGS.PUMPKIN_FUCK_YEAR_DONE]) {
						kGAMECLASS.fera.pumpkinFuckEncounter();
						return;
					}
				}
				//Fera is free!
				else {
					if (flags[kFLAGS.FERAS_TRAP_SPRUNG_YEAR] == 0) {
						if (date.fullYear > flags[kFLAGS.FERAS_GLADE_EXPLORED_YEAR]) {
							kGAMECLASS.fera.feraSceneTwoIntroduction();
							return;
						}
					}
				}
			}
			//Hel jumps you for sex.
			if (flags[kFLAGS.PC_PROMISED_HEL_MONOGAMY_FUCKS] == 1 && flags[kFLAGS.HEL_RAPED_TODAY] == 0 && rand(10) == 0 && player.gender > 0 && !kGAMECLASS.helScene.followerHel()) {
				kGAMECLASS.helScene.helSexualAmbush();
				return;
			}
			//Every 5th exploration encounters d2 if hasnt been met yet and factory done
			if (flags[kFLAGS.DISCOVERED_DUNGEON_2_ZETAZ] == 0 && player.statusEffectv1(StatusEffects.ExploredDeepwoods) % 5 == 0 && flags[kFLAGS.FACTORY_SHUTDOWN] > 0) {
				kGAMECLASS.dungeons.enterDeepCave();
				return;
			}
			if (flags[kFLAGS.ERLKING_DISABLED] == 0 && flags[kFLAGS.ERLKING_ENCOUNTER_COUNTER] == 4)
			{
				flags[kFLAGS.ERLKING_ENCOUNTER_COUNTER] = 0;
				erlkingScene.encounterWildHunt();
				return;
			}
			else
			{
				flags[kFLAGS.ERLKING_ENCOUNTER_COUNTER]++;
			}
			
			select = choice[rand(choice.length)];
			//==============================
			//EVENTS GO HERE!
			//==============================
			switch(select) {
				case 0: //Faerie
					faerie.encounterFaerie();
					break;
				case 1: //Tentacle beasts
					if (player.gender > 0) flags[kFLAGS.GENDERLESS_CENTAUR_MADNESS] = 0;
					//Tentacle avoidance chance due to dangerous plants
					if (player.hasKeyItem("Dangerous Plants") >= 0 && player.inte / 2 > rand(50)) {
						trace("TENTACLE'S AVOIDED DUE TO BOOK!");
						outputText("Using the knowledge contained in your 'Dangerous Plants' book, you determine a tentacle beast's lair is nearby, do you continue?  If not you could return to camp.\n\n", true);
						simpleChoices("Continue", tentacleBeastScene.encounter, "", null, "", null, "", null, "Leave", camp.returnToCampUseOneHour);
						return;
					}
					else {
						tentacleBeastScene.encounter();
						return;
					}
					break;
				case 2: //Corrupted Glade
					if (rand(4) == 0) {
						trappedSatyr();
						return;
					}
					corruptedGlade.intro();
					break;
				case 3: //Akbal
					if (flags[kFLAGS.TAMANI_GENDER] == 2) {akbalHermScene.supahAkabalEdition();}
					else {akbalScene.supahAkabalEdition();}
					break;
				case 4: //Kitsunes
					if (rand(3) == 0) kitsuneScene.kitsuneShrine();
					else kitsuneScene.enterTheTrickster();
					break;
				case 5: //Tamani
					if (player.totalCocks() > 0 && flags[kFLAGS.TAMANI_DAUGHTER_PREGGO_COUNTDOWN] == 0 && flags[kFLAGS.TAMANI_NUMBER_OF_DAUGHTERS] >= 24) {
						tamaniDaughtersScene.encounterTamanisDaughters();
					}
					else
						tamaniScene.encounterTamani();
					break;
				case 6: //Gather wood
					camp.cabinProgress.gatherWoods();
					break;
				default: //Failsafe mechanism
					outputText("You enjoy a peaceful walk in the deepwoods.  It gives you time to think over the recent, disturbing events.", true);
					dynStats("tou", .5, "int", 1);
					doNext(camp.returnToCampUseOneHour);
					break;
			}
		}
=======
>>>>>>> upstream/master

		public function isDiscovered():Boolean {
			return flags[kFLAGS.TIMES_EXPLORED_FOREST] > 0;
		}
		public function discover():void {
			clearOutput();
			outputText("You walk for quite some time, roaming the hard-packed and pink-tinged earth of the demon-realm.  Rust-red rocks speckle the wasteland, as barren and lifeless as anywhere else you've been.  A cool breeze suddenly brushes against your face, as if gracing you with its presence.  You turn towards it and are confronted by the lush foliage of a very old looking forest.  You smile as the plants look fairly familiar and non-threatening.  Unbidden, you remember your decision to test the properties of this place, and think of your campsite as you walk forward.  Reality seems to shift and blur, making you dizzy, but after a few minutes you're back, and sure you'll be able to return to the forest with similar speed.\n\n<b>You have discovered the Forest!</b>");
			flags[kFLAGS.TIMES_EXPLORED]++;
			flags[kFLAGS.TIMES_EXPLORED_FOREST]++;
<<<<<<< HEAD

			var choice:Array = [];
			var select:int;
			
			//Build choice list!
			choice[choice.length] = 0; //General Goblin and Imp Encounters
			if (player.findStatusEffect(StatusEffects.PureCampJojo) < 0 && !camp.campCorruptJojo() && flags[kFLAGS.JOJO_DEAD_OR_GONE] <= 0 && (flags[kFLAGS.JOJO_STATUS] < 2 || rand(2) == 0))
				choice[choice.length] = 1; //Jojo
			if (player.findStatusEffect(StatusEffects.PureCampJojo) < 0 && !camp.campCorruptJojo() && flags[kFLAGS.JOJO_DEAD_OR_GONE] <= 0 && player.findPerk(PerkLib.PiercedFurrite) >= 0 && rand(5) == 0 && (player.cor > 25 || flags[kFLAGS.JOJO_STATUS] > 0))
				choice[choice.length] = 1; //Extra chance of Jojo encounter.
			if (player.level >= 2) choice[choice.length] = 2; //Tentacle Beast
			if (flags[kFLAGS.CORRUPTED_GLADES_DESTROYED] < 100 && rand(100) >= Math.round(flags[kFLAGS.CORRUPTED_GLADES_DESTROYED] * 0.75)) choice[choice.length] = 3; //Corrupted Glade
			choice[choice.length] = 4; //Trip on a root
			if (rand(2) == 0) choice[choice.length] = 5; //Bee-girl encounter
			if (rand(2) == 0) choice[choice.length] = 6; //Pigtail Truffle or Healing Pill
			if (flags[kFLAGS.CAMP_CABIN_PROGRESS] >= 4 && flags[kFLAGS.CAMP_CABIN_WOOD_RESOURCES] < 100 && rand(2) == 0) choice[choice.length] = 7; //Gather woods
			if (player.level >= 3 || model.time.days >= 20) choice[choice.length] = 8; //Mimic or Succubus (UTG)
			if (flags[kFLAGS.TAMANI_GENDER] == 2) choice[choice.length] = 10; choice[choice.length] = 10;
			choice[choice.length] = 9; //Peaceful walk in woods
			//Helia monogamy fucks
			if (flags[kFLAGS.PC_PROMISED_HEL_MONOGAMY_FUCKS] == 1 && flags[kFLAGS.HEL_RAPED_TODAY] == 0 && rand(10) == 0 && player.gender > 0 && !kGAMECLASS.helScene.followerHel()) {
				kGAMECLASS.helScene.helSexualAmbush();
				return;
			}
			//Chance to discover deepwoods
			if ((flags[kFLAGS.TIMES_EXPLORED_FOREST] >= 20) && player.findStatusEffect(StatusEffects.ExploredDeepwoods) < 0) {
				player.createStatusEffect(StatusEffects.ExploredDeepwoods, 0, 0, 0, 0);
				outputText("After exploring the forest so many times, you decide to really push it, and plunge deeper and deeper into the woods.  The further you go the darker it gets, but you courageously press on.  The plant-life changes too, and you spot more and more lichens and fungi, many of which are luminescent.  Finally, a wall of tree-trunks as wide as houses blocks your progress.  There is a knot-hole like opening in the center, and a small sign marking it as the entrance to the 'Deepwoods'.  You don't press on for now, but you could easily find your way back to explore the Deepwoods.\n\n<b>Deepwoods exploration unlocked!</b>", true);
				doNext(camp.returnToCampUseOneHour);
				return;
			}
			//Essy every 20 explores or so
			if ((rand(100) <= 1) && player.gender > 0 && (flags[kFLAGS.ESSY_MET_IN_DUNGEON] == 0 || flags[kFLAGS.TOLD_MOTHER_TO_RELEASE_ESSY] == 1)) {
				essrayle.essrayleMeetingI();
				return;
			}
			//Chance of dick-dragging! 10% + 10% per two foot up to 30%
			temp = 10 + (player.longestCockLength() - player.tallness) / 24 * 10;
			if (temp > 30) temp = 30;
			if (temp > rand(100) && player.longestCockLength() >= player.tallness && player.totalCockThickness() >= 12) {
				bigJunkForestScene();
				return;
			}
			//Marble randomness
			if (flags[kFLAGS.TIMES_EXPLORED_FOREST] % 50 == 0 && flags[kFLAGS.TIMES_EXPLORED_FOREST] > 0 && player.findStatusEffect(StatusEffects.MarbleRapeAttempted) < 0 && player.findStatusEffect(StatusEffects.NoMoreMarble) < 0 && player.findStatusEffect(StatusEffects.Marble) >= 0 && flags[kFLAGS.MARBLE_WARNING] == 0) {
				//can be triggered one time after Marble has been met, but before the addiction quest starts.
				clearOutput();
				outputText("While you're moving through the trees, you suddenly hear yelling ahead, followed by a crash and a scream as an imp comes flying at high speed through the foliage and impacts a nearby tree.  The small demon slowly slides down the tree before landing at the base, still.  A moment later, a familiar-looking cow-girl steps through the bushes brandishing a huge two-handed hammer with an angry look on her face.");
				outputText("\n\nShe goes up to the imp, and kicks it once.  Satisfied that the creature isn't moving, she turns around to face you and gives you a smile.  \"<i>Sorry about that, but I prefer to take care of these buggers quickly.  If they get the chance to call on their friends, they can actually become a nuisance.</i>\"  She disappears back into the foliage briefly before reappearing holding two large pile of logs under her arms, with a fire axe and her hammer strapped to her back.  \"<i>I'm gathering firewood for the farm, as you can see; what brings you to the forest, sweetie?</i>\"  You inform her that you're just exploring.");
				outputText("\n\nShe gives a wistful sigh. \"<i>I haven't really explored much since getting to the farm.  Between the jobs Whitney gives me, keeping in practice with my hammer, milking to make sure I don't get too full, cooking, and beauty sleep, I don't get a lot of free time to do much else.</i>\"  She sighs again.  \"<i>Well, I need to get this back, so I'll see you later!</i>\"");
				//end event
				doNext(camp.returnToCampUseOneHour);
				return;
			}
			select = choice[rand(choice.length)];
			trace(select);
			//==============================
			//EVENTS GO HERE!
			//==============================
			switch(select) {
				case 0: //Tamani 25% of all goblin encounters encounter rate
					if (!(rand(4) <= 0 && flags[kFLAGS.TAMANI_TIME_OUT] == 0 && player.gender > 0 && flags[kFLAGS.TAMANI_BAD_ENDED] == 0 && (player.totalCocks() > 0 || player.hasKeyItem("Deluxe Dildo") < 0))) {
					//Determines likelyhood of imp/goblins
					kGAMECLASS.exploration.genericGobImpEncounters();
					break;
					}
				case 10:
						if (player.totalCocks() > 0 && flags[kFLAGS.TAMANI_DAUGHTER_PREGGO_COUNTDOWN] == 0 && flags[kFLAGS.TAMANI_NUMBER_OF_DAUGHTERS] >= 24) {
							tamaniDaughtersScene.encounterTamanisDaughters();
						}
						else
							tamaniScene.encounterTamani();
						return;
				case 1: //Jojo
					clearOutput();
					if (flags[kFLAGS.JOJO_STATUS] == 0 && player.findStatusEffect(StatusEffects.PureCampJojo) < 0) {
						if (player.cor < 25)
						{
							if (player.level >= 4)
							{
								flags[kFLAGS.JOJO_STATUS] = 1;
								kGAMECLASS.jojoScene.lowCorruptionJojoEncounter();
								return;
							}
							else
							{
								outputText("You enjoy a peaceful walk in the woods.  It gives you time to think over the recent, disturbing events.", true);
								dynStats("tou", .5, "int", 1);
								doNext(camp.returnToCampUseOneHour);
								return;
							}
						}
						else 
						{
							kGAMECLASS.jojoScene.highCorruptionJojoEncounter();
						}
						return;
					} else if (flags[kFLAGS.JOJO_STATUS] >= 2) { //Angry/Horny Jojo
						kGAMECLASS.jojoScene.corruptJojoEncounter();
					} else { // JOJO_STATUS is 1 or Negative (indicates rape is disabled.)
						kGAMECLASS.jojoScene.repeatJojoEncounter();
					}
					break;
				case 2: //Tentacle Beast
					clearOutput();
					//Oh noes, tentacles!
					//Tentacle avoidance chance due to dangerous plants
					if (player.hasKeyItem("Dangerous Plants") >= 0 && player.inte / 2 > rand(50)) {
						trace("TENTACLE'S AVOIDED DUE TO BOOK!");
						outputText("Using the knowledge contained in your 'Dangerous Plants' book, you determine a tentacle beast's lair is nearby, do you continue?  If not you could return to camp.\n\n", false);
						simpleChoices("Continue", tentacleBeastScene.encounter, "", null, "", null, "", null, "Leave", camp.returnToCampUseOneHour);
						return;
					}
					else {
						tentacleBeastScene.encounter();
						return;
					}
					break;
				case 3: //Corrupted Glade
					if (rand(4) == 0) {
						trappedSatyr();
						return;
					}
					corruptedGlade.intro();
					break;
				case 4: //Trip on a root
					outputText("You trip on an exposed root, scraping yourself somewhat, but otherwise the hour is uneventful.", false);
					player.takeDamage(10);
					doNext(camp.returnToCampUseOneHour);
					break;
				case 5: //Bee-girl
					beeGirlScene.beeEncounter();
					break;
				case 6: 
					switch(rand(8)) {
						case 0:
							outputText("You find a large piece of insectile carapace obscured in the ferns to your left. It's mostly black with a thin border of bright yellow along the outer edge. There's still a fair portion of yellow fuzz clinging to the chitinous shard. It feels strong and flexible - maybe someone can make something of it. ");
							inventory.takeItem(useables.B_CHITN, camp.returnToCampUseOneHour);
							break;
						case 1:
						case 2:
							outputText("You find a pill stamped with the letter 'H' discarded on the ground. ");
							inventory.takeItem(consumables.H_PILL, camp.returnToCampUseOneHour);
							break;
						case 3:
						case 4:
						case 5:
						case 6:
						case 7:
						default:
							outputText("You spot something unusual. Taking a closer look, it's definitely a truffle of some sort. ");
							inventory.takeItem(consumables.PIGTRUF, camp.returnToCampUseOneHour);
					}
					break;
				case 7: //Gather woods
					camp.cabinProgress.gatherWoods();
					break;
				case 8:
					if (rand(2) == 0)
						getGame().mimicScene.mimicTentacleStart(3);
					else
						getGame().succubusScene.encounterSuccubus();
					break;
				default: //Failsafe
					if (player.cor < 80) {
						outputText("You enjoy a peaceful walk in the woods, it gives you time to think.", false);
						dynStats("tou", .5, "int", 1);
					}
					else {
						outputText("As you wander in the forest, you keep ", false);
						if (player.gender == 1) outputText("stroking your half-erect " + player.multiCockDescriptLight() + " as you daydream about fucking all kinds of women, from weeping tight virgins to lustful succubi with gaping, drooling fuck-holes.", false);
						if (player.gender == 2) outputText("idly toying with your " + player.vaginaDescript(0) + " as you daydream about getting fucked by all kinds of monstrous cocks, from minotaurs' thick, smelly dongs to demons' towering, bumpy pleasure-rods.", false);
						if (player.gender == 3) outputText("stroking alternatively your " + player.multiCockDescriptLight() + " and your " + player.vaginaDescript(0) + " as you daydream about fucking all kinds of women, from weeping tight virgins to lustful succubi with gaping, drooling fuck-holes, before, or while, getting fucked by various monstrous cocks, from minotaurs' thick, smelly dongs to demons' towering, bumpy pleasure-rods.", false);
						if (player.gender == 0) outputText("daydreaming about sex-demons with huge sexual attributes, and how you could please them.", false);
						outputText("", false);
						dynStats("tou", .5, "lib", .25, "lus", player.lib / 5);
					}
					doNext(camp.returnToCampUseOneHour);
					return;
			}
=======
			doNext(camp.returnToCampUseOneHour);
>>>>>>> upstream/master
		}

		//==============================
		//EVENTS GO HERE!
		//==============================
		private var _forestEncounter:Encounter = null;
		public function get forestEncounter():Encounter { // lateinit because it references getGame()
			const game:CoC     = getGame();
			const fn:FnHelpers = Encounters.fn;
			if (_forestEncounter == null) _forestEncounter =
					Encounters.group(game.commonEncounters.withImpGob, {
						call  : tamaniScene,
						chance: 0.15
					}, game.jojoScene.jojoForest, {
						call  : essrayle.forestEncounter,
						chance: 0.10
					}, corruptedGlade, {
						call  : camp.cabinProgress.forestEncounter,
						chance: 0.5
					}, {
						name  : "deepwoods",
						call  : kGAMECLASS.deepWoods.discover,
						when  : function ():Boolean {
							return (flags[kFLAGS.TIMES_EXPLORED_FOREST] >= 20) && !player.hasStatusEffect(StatusEffects.ExploredDeepwoods);
						},
						chance: Encounters.ALWAYS
					}, {
						name  : "beegirl",
						call  : beeGirlScene.beeEncounter,
						chance: 0.50
					}, {
						name: "tentabeast",
						call: tentacleBeastEncounterFn,
						when: fn.ifLevelMin(2)
					}, {
						name  : "mimic",
						call  : curry(game.mimicScene.mimicTentacleStart, 3),
						when  : fn.ifLevelMin(3),
						chance: 0.50
					}, {
						name  : "succubus",
						call  : game.succubusScene.encounterSuccubus,
						when  : fn.ifLevelMin(3),
						chance: 0.50
					}, {
						name  : "marble",
						call  : marbleVsImp,
						when  : function ():Boolean {
							return flags[kFLAGS.TIMES_EXPLORED_FOREST] > 0 &&
								   !player.hasStatusEffect(StatusEffects.MarbleRapeAttempted)
								   && !player.hasStatusEffect(StatusEffects.NoMoreMarble)
								   && player.hasStatusEffect(StatusEffects.Marble)
								   && flags[kFLAGS.MARBLE_WARNING] == 0;
						},
						chance: 0.10
					}, {
						name: "trip",
						call: tripOnARoot
					}, {
						name  : "chitin",
						call  : findChitin,
						chance: 0.05
					}, {
						name  : "healpill",
						call  : findHPill,
						chance: 0.10
					}, {
						name  : "truffle",
						call  : findTruffle,
						chance: 0.35
					}, {
						name  : "bigjunk",
						call  : game.commonEncounters.bigJunkForestScene,
						chance: game.commonEncounters.bigJunkChance
					}, {
						name: "walk",
						call: forestWalkFn
					});
			return _forestEncounter;
		}

		public function tentacleBeastEncounterFn():void {
			clearOutput();
			//Oh noes, tentacles!
			//Tentacle avoidance chance due to dangerous plants
			if (player.hasKeyItem("Dangerous Plants") >= 0 && player.inte / 2 > rand(50)) {
				trace("TENTACLE'S AVOIDED DUE TO BOOK!");
				outputText("Using the knowledge contained in your 'Dangerous Plants' book, you determine a tentacle beast's lair is nearby, do you continue?  If not you could return to camp.\n\n");
				menu();
				addButton(0, "Continue", tentacleBeastScene.encounter);
				addButton(4, "Leave", camp.returnToCampUseOneHour);
			} else {
				tentacleBeastScene.encounter();
			}

		}

		public function tripOnARoot():void {
			outputText(images.showImage("area-forest"));
			outputText("You trip on an exposed root, scraping yourself somewhat, but otherwise the hour is uneventful.");
			player.takeDamage(10);
			doNext(camp.returnToCampUseOneHour);
		}

		public function findTruffle():void {
			outputText(images.showImage("area-forest"));
			outputText("You spot something unusual. Taking a closer look, it's definitely a truffle of some sort. ");
			inventory.takeItem(consumables.PIGTRUF, camp.returnToCampUseOneHour);
		}
		public function findHPill():void {
			outputText(images.showImage("area-forest"));
			outputText("You find a pill stamped with the letter 'H' discarded on the ground. ");
			inventory.takeItem(consumables.H_PILL, camp.returnToCampUseOneHour);
		}
		public function findChitin():void {
			outputText(images.showImage("area-forest"));
			outputText("You find a large piece of insectile carapace obscured in the ferns to your left. It's mostly black with a thin border of bright yellow along the outer edge. There's still a fair portion of yellow fuzz clinging to the chitinous shard. It feels strong and flexible - maybe someone can make something of it. ");
			inventory.takeItem(useables.B_CHITN, camp.returnToCampUseOneHour);
		}
		public function forestWalkFn():void {
			outputText(images.showImage("area-forest"));
			if (player.cor < 80) {
				outputText("You enjoy a peaceful walk in the woods, it gives you time to think.");
				dynStats("tou", .5, "int", 1);
			}
			else {
				outputText("As you wander in the forest, you keep ");
				if (player.gender == 1) outputText("stroking your half-erect " + player.multiCockDescriptLight() + " as you daydream about fucking all kinds of women, from weeping tight virgins to lustful succubi with gaping, drooling fuck-holes.");
				if (player.gender == 2) outputText("idly toying with your " + player.vaginaDescript(0) + " as you daydream about getting fucked by all kinds of monstrous cocks, from minotaurs' thick, smelly dongs to demons' towering, bumpy pleasure-rods.");
				if (player.gender == 3) outputText("stroking alternatively your " + player.multiCockDescriptLight() + " and your " + player.vaginaDescript(0) + " as you daydream about fucking all kinds of women, from weeping tight virgins to lustful succubi with gaping, drooling fuck-holes, before, or while, getting fucked by various monstrous cocks, from minotaurs' thick, smelly dongs to demons' towering, bumpy pleasure-rods.");
				if (player.gender == 0) outputText("daydreaming about sex-demons with huge sexual attributes, and how you could please them.");
				outputText("");
				dynStats("tou", .5, "lib", .25, "lus", player.lib / 5);
			}
			doNext(camp.returnToCampUseOneHour);
		}


		public function marbleVsImp():void {
			clearOutput();
			outputText("While you're moving through the trees, you suddenly hear yelling ahead, followed by a crash and a scream as an imp comes flying at high speed through the foliage and impacts a nearby tree.  The small demon slowly slides down the tree before landing at the base, still.  A moment later, a familiar-looking cow-girl steps through the bushes brandishing a huge two-handed hammer with an angry look on her face.");
			outputText("\n\nShe goes up to the imp, and kicks it once.  Satisfied that the creature isn't moving, she turns around to face you and gives you a smile.  \"<i>Sorry about that, but I prefer to take care of these buggers quickly.  If they get the chance to call on their friends, they can actually become a nuisance.</i>\"  She disappears back into the foliage briefly before reappearing holding two large pile of logs under her arms, with a fire axe and her hammer strapped to her back.  \"<i>I'm gathering firewood for the farm, as you can see; what brings you to the forest, sweetie?</i>\"  You inform her that you're just exploring.");
			outputText("\n\nShe gives a wistful sigh. \"<i>I haven't really explored much since getting to the farm.  Between the jobs Whitney gives me, keeping in practice with my hammer, milking to make sure I don't get too full, cooking, and beauty sleep, I don't get a lot of free time to do much else.</i>\"  She sighs again.  \"<i>Well, I need to get this back, so I'll see you later!</i>\"");
			//end event
			doNext(camp.returnToCampUseOneHour);
		}
		public function explore():void
		{
			clearOutput();
			//Increment forest exploration counter.
			flags[kFLAGS.TIMES_EXPLORED_FOREST]++;
			forestEncounter.execEncounter();
		}

	}
}
